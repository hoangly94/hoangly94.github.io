import{getErrorMessage}from"./helpers";export class HistoryProvider{constructor(e,o){this._datafeedUrl=e,this._requester=o}getBars(e,o,t){const r={symbol:e.ticker||"",resolution:o,from:t.from,to:t.to};return void 0!==t.countBack&&(r.countback=t.countBack),void 0!==e.currency_code&&(r.currencyCode=e.currency_code),void 0!==e.unit_id&&(r.unitId=e.unit_id),new Promise(((e,o)=>{this._requester.sendRequest(this._datafeedUrl,"history",r).then((t=>{if("ok"!==t.s&&"no_data"!==t.s)return void o(t.errmsg);const r=[],s={noData:!1};if("no_data"===t.s)s.noData=!0,s.nextTime=t.nextTime;else{const e=void 0!==t.v,o=void 0!==t.o;for(let s=0;s<t.t.length;++s){const a={time:1e3*t.t[s],close:parseFloat(t.c[s]),open:parseFloat(t.c[s]),high:parseFloat(t.c[s]),low:parseFloat(t.c[s])};o&&(a.open=parseFloat(t.o[s]),a.high=parseFloat(t.h[s]),a.low=parseFloat(t.l[s])),e&&(a.volume=parseFloat(t.v[s])),r.push(a)}}e({bars:r,meta:s})})).catch((e=>{const t=getErrorMessage(e);console.warn(`HistoryProvider: getBars() failed, error=${t}`),o(t)}))}))}}